state = "#........#.#.#...###..###..###.#..#....###.###.#.#...####..##..##.#####..##...#.#.....#...###.#.####"
notes = {
	"#..##" => ".",
	"##..#" => "#",
	"..##." => ".",
	".##.#" => "#",
	"....." => ".",
	"..###" => "#",
	"###.#" => "#",
	"#...." => ".",
	"#.##." => "#",
	".#.##" => "#",
	"#...#" => ".",
	"...##" => ".",
	"###.." => "#",
	".#..#" => ".",
	"####." => ".",
	"....#" => ".",
	"#####" => "#",
	".###." => ".",
	"#..#." => ".",
	"##..." => "#",
	".#..." => "#",
	"#.#.#" => ".",
	"..#.." => "#",
	"...#." => "#",
	"##.#." => ".",
	".##.." => "#",
	".#.#." => ".",
	"#.#.." => ".",
	"..#.#" => "#",
	"#.###" => ".",
	"##.##" => ".",
	".####" => "#",
}
num_generations = 20

num_generations.times do
	prev_state = "..." + state + "..."
	state = (2...prev_state.size-2).map { |pos| notes[prev_state[pos-2..pos+2]] }.join
end

puts state.size.times.select { |j| state[j] == ?# }.map { |j| j-num_generations }.inject(:+)